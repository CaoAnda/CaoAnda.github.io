<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://zstu-CAD.github.io</id>
    <title>CADCADCAD</title>
    <updated>2020-03-13T04:05:24.471Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://zstu-CAD.github.io"/>
    <link rel="self" href="https://zstu-CAD.github.io/atom.xml"/>
    <subtitle>CAD加油！</subtitle>
    <logo>https://zstu-CAD.github.io/images/avatar.png</logo>
    <icon>https://zstu-CAD.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, CADCADCAD</rights>
    <entry>
        <title type="html"><![CDATA[Array Shrinking]]></title>
        <id>https://zstu-CAD.github.io/array-shrinking/</id>
        <link href="https://zstu-CAD.github.io/array-shrinking/">
        </link>
        <updated>2020-03-13T04:03:15.000Z</updated>
        <content type="html"><![CDATA[<p><a href="https://codeforces.com/contest/1312/problem/E">E - Array Shrinking</a></p>
<p>用<code>dp[i][j].fi</code>表示连通块的大小，用<code>dp[i][j].se</code>表示连通块表示的数。</p>
<p>然后再进行动态规划，<code>a[i]</code>表示从<code>1~i</code>可以得到的最短长度。</p>
<pre><code class="language-cpp">// Created by CAD on 2020/3/9.
#include &lt;bits/stdc++.h&gt;

#define fi first
#define se second
#define pii pair&lt;int,int&gt;
using namespace std;

pii dp[505][505];
int a[505];
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    int n;cin&gt;&gt;n;
    for(int i=1;i&lt;=n;++i)
        cin&gt;&gt;dp[i][i].se,dp[i][i].fi=1;
    for(int i=1;i&lt;=n;++i)
        for(int j=i;j&gt;=1;--j){
            for(int k=i-1;k&gt;=j;--k){
                if(dp[k+1][i].se&amp;&amp;dp[j][k].se&amp;&amp;dp[k+1][i].se==dp[j][k].se)
                    dp[j][i].se=dp[k+1][i].se+1,dp[j][i].fi=dp[k+1][i].fi+dp[j][k].fi;
            }
        }
    for(int i=1;i&lt;=n;++i){
        a[i]=a[i-1]+1;
        for(int j=i-1;j&gt;=1;--j){
            if(dp[j][i].fi) a[i]=min(a[i-dp[j][i].fi]+1,a[i]);
        }
    }
    cout&lt;&lt;a[n]&lt;&lt;&quot;\n&quot;;
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://zstu-CAD.github.io/hello-gridea/</id>
        <link href="https://zstu-CAD.github.io/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>